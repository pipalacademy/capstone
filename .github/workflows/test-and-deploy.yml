name: Test and Deploy

on:
  push:
    branches:
      - main

env:
  TEST_DATABASE_URL: "postgres://postgres:postgres@localhost/postgres"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: pip install -r dev-requirements.txt -r requirements.txt
    - name: Install apt dependencies
      run: sudo apt-get install -y zip unzip
    - name: Set up Go for Gitto
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.18.0'
    - name: Install Gitto
      shell: bash
      run: |
        go install github.com/pipalacademy/gitto@latest
    - name: Run tests
      run: ./runtests.sh

  deploy-staging:
    runs-on: ubuntu-latest
    env:
      NOMAD_VAR_gitto_api_token = ${{ secrets.CAPSTONE_STAGING_GITTO_API_TOKEN }}
      NOMAD_VAR_gitto_host = git.capstone-staging.pipal.in
    needs: run-tests
    steps:
      - name: Deploy to staging
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: capstone-staging.pipal.in
          username: capstone
          key: ${{ secrets.PIPAL_BOT_SSH_KEY }}
          script: |
            bash -c 'cd capstone; git pull && venv/bin/python -m pip install -U -r requirements.txt && sudo apt-get install -y zip unzip && venv/bin/python run.py --migrate && ./nomad-scripts/start-jobs.sh && sudo supervisorctl restart capstone capstone-tasks && ./runner/build-and-replace-docker-image.sh'
